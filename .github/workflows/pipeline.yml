name: Set up CI/CD

on:
  push:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: Creating .env file
        run: |
          mkdir -p .env
          echo "ENVIRONMENT=$ENVIRONMENT" > .env/dev.env
          echo "APP_DATABASE_NAME=$APP_DATABASE_NAME" >> .env/dev.env
          echo "DATABASE_URL=$DATABASE_URL" >> .env/dev.env
          echo "SECRET_KEY=$SECRET_KEY" >> .env/dev.env
          echo "ALGORITHM=$ALGORITHM" >> .env/dev.env
          echo "DEFAULT_ADMIN_EMAIL=$DEFAULT_ADMIN_EMAIL" >> .env/dev.env
          echo "DEFAULT_ADMIN_PASSWORD=$DEFAULT_ADMIN_PASSWORD" >> .env/dev.env
        shell: bash
        env:
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          APP_DATABASE_NAME: ${{ secrets.APP_DATABASE_NAME }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALGORITHM: ${{ secrets.ALGORITHM }}
          DEFAULT_ADMIN_EMAIL: ${{ secrets.DEFAULT_ADMIN_EMAIL }}
          DEFAULT_ADMIN_PASSWORD: ${{ secrets.DEFAULT_ADMIN_PASSWORD }}

      - name: "Run tests"
        run: chmod +x bin/linux/test.sh && ./bin/linux/test.sh

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        working-directory: app
        run: docker build -t eventorize-api:latest -f Dockerfile.prod .

      - name: Save Docker image
        run: docker save eventorize-api:latest > eventorize-api.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: eventorize-api.tar
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Deploy to Render
        uses: JorgeLNJunior/render-deploy@v1.3.2
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }} 
          api_key: ${{ secrets.RENDER_API_KEY }}
        
